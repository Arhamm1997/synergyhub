{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm backdrop-blur-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6EACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/dashboard/summary-cards.tsx"],"sourcesContent":["import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n} from \"@/components/ui/card\";\r\nimport { Activity, ListChecks, Users, Briefcase } from \"lucide-react\";\r\nimport type { SummaryStat } from \"@/lib/types\";\r\n\r\nconst stats: SummaryStat[] = [\r\n  {\r\n    title: \"Active Tasks\",\r\n    value: \"32\",\r\n    description: \"+2 from last week\",\r\n    icon: ListChecks,\r\n  },\r\n  {\r\n    title: \"Projects\",\r\n    value: \"8\",\r\n    description: \"1 nearing deadline\",\r\n    icon: Briefcase,\r\n  },\r\n  {\r\n    title: \"Team Members\",\r\n    value: \"12\",\r\n    description: \"2 recently joined\",\r\n    icon: Users,\r\n  },\r\n  {\r\n    title: \"Productivity\",\r\n    value: \"92%\",\r\n    description: \"+5% from last month\",\r\n    icon: Activity,\r\n  },\r\n];\r\n\r\nexport function SummaryCards() {\r\n  return (\r\n    <>\r\n      {stats.map((stat) => (\r\n        <Card key={stat.title}>\r\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n            <CardTitle className=\"text-sm font-medium\">{stat.title}</CardTitle>\r\n            <stat.icon className=\"h-4 w-4 text-muted-foreground\" />\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"text-2xl font-bold\">{stat.value}</div>\r\n            <p className=\"text-xs text-muted-foreground\">{stat.description}</p>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;AAAA;AAAA;AAAA;;;;AAGA,MAAM,QAAuB;IAC3B;QACE,OAAO;QACP,OAAO;QACP,aAAa;QACb,MAAM,kNAAA,CAAA,aAAU;IAClB;IACA;QACE,OAAO;QACP,OAAO;QACP,aAAa;QACb,MAAM,4MAAA,CAAA,YAAS;IACjB;IACA;QACE,OAAO;QACP,OAAO;QACP,aAAa;QACb,MAAM,oMAAA,CAAA,QAAK;IACb;IACA;QACE,OAAO;QACP,OAAO;QACP,aAAa;QACb,MAAM,0MAAA,CAAA,WAAQ;IAChB;CACD;AAEM,SAAS;IACd,qBACE;kBACG,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,gIAAA,CAAA,OAAI;;kCACH,8OAAC,gIAAA,CAAA,aAAU;wBAAC,WAAU;;0CACpB,8OAAC,gIAAA,CAAA,YAAS;gCAAC,WAAU;0CAAuB,KAAK,KAAK;;;;;;0CACtD,8OAAC,KAAK,IAAI;gCAAC,WAAU;;;;;;;;;;;;kCAEvB,8OAAC,gIAAA,CAAA,cAAW;;0CACV,8OAAC;gCAAI,WAAU;0CAAsB,KAAK,KAAK;;;;;;0CAC/C,8OAAC;gCAAE,WAAU;0CAAiC,KAAK,WAAW;;;;;;;;;;;;;eAPvD,KAAK,KAAK;;;;;;AAa7B","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/dashboard/task-progress-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TaskProgressChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call TaskProgressChart() from the server but TaskProgressChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/task-progress-chart.tsx <module evaluation>\",\n    \"TaskProgressChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,kFACA","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/dashboard/task-progress-chart.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const TaskProgressChart = registerClientReference(\n    function() { throw new Error(\"Attempted to call TaskProgressChart() from the server but TaskProgressChart is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/dashboard/task-progress-chart.tsx\",\n    \"TaskProgressChart\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,8DACA","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,8DACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,8DACA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/ui/avatar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0CACA","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/components/dashboard/recent-tasks.tsx"],"sourcesContent":["import Image from \"next/image\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n} from \"@/components/ui/card\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport type { Task } from \"@/lib/types\";\r\nimport placeholderImages from \"@/lib/placeholder-images.json\";\r\n\r\nconst tasks: Task[] = [\r\n  {\r\n    id: \"1\",\r\n    title: \"Deploy V2 of the marketing website\",\r\n    assignee: { name: \"Sarah Lee\", avatarUrl: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-2')?.imageUrl!, avatarHint: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-2')?.imageHint! },\r\n    priority: \"High\",\r\n    status: \"In Progress\",\r\n    dueDate: \"2024-08-15\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    title: \"Fix authentication bug on mobile\",\r\n    assignee: { name: \"David Chen\", avatarUrl: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-3')?.imageUrl!, avatarHint: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-3')?.imageHint! },\r\n    priority: \"High\",\r\n    status: \"Todo\",\r\n    dueDate: \"2024-08-10\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Design new client onboarding flow\",\r\n    assignee: { name: \"Maria Rodriguez\", avatarUrl: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-4')?.imageUrl!, avatarHint: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-4')?.imageHint! },\r\n    priority: \"Medium\",\r\n    status: \"In Progress\",\r\n    dueDate: \"2024-08-25\",\r\n  },\r\n   {\r\n    id: \"4\",\r\n    title: \"Write Q3 performance report\",\r\n    assignee: { name: \"Alex Moran\", avatarUrl: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-1')?.imageUrl!, avatarHint: placeholderImages.placeholderImages.find(p => p.id === 'user-avatar-1')?.imageHint! },\r\n    priority: \"Low\",\r\n    status: \"Done\",\r\n    dueDate: \"2024-07-30\",\r\n  },\r\n];\r\n\r\nconst priorityVariant: { [key in Task[\"priority\"]]: \"destructive\" | \"secondary\" | \"default\" } = {\r\n    High: \"destructive\",\r\n    Medium: \"secondary\",\r\n    Low: \"default\"\r\n}\r\n\r\nexport function RecentTasks() {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Recent Tasks</CardTitle>\r\n        <CardDescription>An overview of recently updated tasks.</CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <Table>\r\n          <TableHeader>\r\n            <TableRow>\r\n              <TableHead>Task</TableHead>\r\n              <TableHead className=\"hidden sm:table-cell\">Assignee</TableHead>\r\n              <TableHead>Priority</TableHead>\r\n              <TableHead>Status</TableHead>\r\n            </TableRow>\r\n          </TableHeader>\r\n          <TableBody>\r\n            {tasks.map((task) => (\r\n              <TableRow key={task.id}>\r\n                <TableCell>\r\n                  <div className=\"font-medium\">{task.title}</div>\r\n                  <div className=\"text-sm text-muted-foreground md:hidden\">{task.assignee.name}</div>\r\n                </TableCell>\r\n                <TableCell className=\"hidden sm:table-cell\">\r\n                  <Avatar className=\"h-8 w-8\">\r\n                    <AvatarImage src={task.assignee.avatarUrl} alt={task.assignee.name} data-ai-hint={task.assignee.avatarHint} />\r\n                    <AvatarFallback>{task.assignee.name.charAt(0)}</AvatarFallback>\r\n                  </Avatar>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Badge variant={priorityVariant[task.priority]} className=\"capitalize\">{task.priority}</Badge>\r\n                </TableCell>\r\n                <TableCell>\r\n                    <Badge variant=\"outline\" className=\"capitalize\">{task.status}</Badge>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":["file:///D:/Projects/synergyhub/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\r\nimport { SummaryCards } from \"@/components/dashboard/summary-cards\";\r\nimport { TaskProgressChart } from \"@/components/dashboard/task-progress-chart\";\r\nimport { RecentTasks } from \"@/components/dashboard/recent-tasks\";\r\nimport { CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n\r\nexport default function DashboardPage() {\r\n  return (\r\n    <div className=\"flex flex-col gap-4\">\r\n       <div className=\"flex items-center justify-between\">\r\n         <div>\r\n            <h1 className=\"text-2xl font-bold\">Welcome Back, Alex!</h1>\r\n            <p className=\"text-muted-foreground\">Here's a summary of your team's activity.</p>\r\n         </div>\r\n      </div>\r\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\r\n        <SummaryCards />\r\n      </div>\r\n      <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-5\">\r\n        <div className=\"lg:col-span-3\">\r\n          <TaskProgressChart />\r\n        </div>\r\n        <div className=\"lg:col-span-2\">\r\n          <RecentTasks />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAGe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;;sCACE,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;0BAG3C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mJAAA,CAAA,eAAY;;;;;;;;;;0BAEf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,4JAAA,CAAA,oBAAiB;;;;;;;;;;kCAEpB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kJAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;AAKtB","debugId":null}}]
}